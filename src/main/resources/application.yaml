# The host that the master server is running on
# [backtype.storm.Config.NIMBUS_HOST]
nimbus.host: localhost

# How many processes should be spawned around the cluster to execute this
# topology. Each process will execute some number of tasks as threads within
# them. This parameter should be used in conjunction with the parallelism hints
# on each component in the topology to tune the performance of a topology.
# [backtype.storm.Config.TOPOLOGY_WORKERS]
topology.workers: 1

# The maximum amount of time given to the topology to fully process a message
# emitted by a spout. If the message is not acked within this time frame, Storm
# will fail the message on the spout. Some spouts implementations will then replay
# the message at a later time.
# [backtype.storm.Config.TOPOLOGY_MESSAGE_TIMEOUT_SECS]
topology.message.timeout.secs: 300

# How long without heartbeating a task can go before nimbus will consider the
# task dead and reassign it to another location.
# [backtype.storm.Config.NIMBUS_TASK_TIMEOUT_SECS]
nimbus.task.timeout.secs: 120

topology.max.spout.pending: 200

topology.default.bolt.num.task: 1
topology.default.spout.num.task: 1

kafka.topicName.search.prices: "search.prices"

# Attributes specific to each topology component (spout/bolt)
# [com.hotwire.hotpocket.uisfeeder.storm.ConfigurableTopologyBuilder]
topologyBuilder.SEARCH_SUBMITTER_BOLT.parallelismHint: 2
topologyBuilder.CUSTOMER_LOGIN_SUBMITTER_BOLT.parallelismHint: 1
topologyBuilder.EXPEDIA_USER_ID_RESOLVER_BOLT.parallelismHint: 2
topologyBuilder.PROCESS_SEARCH_BOLT.parallelismHint: 2
